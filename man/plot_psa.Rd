% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_psa.R
\name{plot_psa}
\alias{plot_psa}
\title{Generate Probabilistic Sensitivity Analysis (PSA) Plots}
\usage{
plot_psa(
  psa_results_,
  interventions_,
  reference_ = 1,
  threshold_ = 30000,
  maximum_threshold_ = 1e+05,
  effects_prefix_ = "QALYs_",
  costs_prefix_ = "Cost_"
)
}
\arguments{
\item{psa_results_}{Data table (dataframe) representing the outputs from the
\code{\link{run_psa}} function.}

\item{interventions_}{String vector, of length 2 or more, containing the
names of the health technologies under comparison.}

\item{reference_}{String scalar defining which intervention (columns of in
the \code{psa_results_} dataframe) is considered to be the reference
strategy. The default value 1 means that the intervention associated with the
first column in the \code{psa_results_} dataframe is the reference and the
one(s) associated with the other column(s) is(are) the comparators.}

\item{threshold_}{Numeric scalar, specifying the cost-per-effect or
(cost-per-QALY) to be used in estimating the incremental benefits to be
reported in the cost-effectiveness table.}

\item{maximum_threshold_}{Numeric scalar, specifying the maximum
cost-effectiveness (willingness-to-pay) threshold to be used in generating
the PSA plots.}

\item{effects_prefix_}{String scalar, defining the prefix of the effects
columns in the PSA data table.}

\item{costs_prefix_}{String scalar, defining the prefix of the costs columns
in the PSA data table.}
}
\value{
A list containing the following elements
\describe{
\item{CE table}{Cost-Effectiveness Table}
\item{CE plane}{Cost-Effectiveness Plane}
\item{CEAC}{Cost-Effectiveness Acceptability Curve}
\item{CEAF}{Cost-Effectiveness Acceptability Frontier Plot}
\item{EVPI}{Expected Value of Perfect Information Plot}
}
}
\description{
Draw plots using the results from the Probabilistic Sensitivity
Analysis (PSA) performed using the \code{\link{run_psa}} function. The PSA
outputs are passed to the \code{\link[BCEA]{bcea}} function to generate the
plots.
}
\examples{
\dontrun{
library(sicksickerPack)
PSA_results <- run_psa(
  model_func_ = "run_sickSicker_model",
  model_func_args_ = list(
    age_init_ = 25,
    age_max_  = 55,
    discount_rate_ = 0.035
  ),
  psa_params_names_ = dummy_sickSickerModel_psa_params$
    psa_params_names,
  psa_params_dists_ = dummy_sickSickerModel_psa_params$
    psa_params_dists,
  psa_params_dists_args_ = dummy_sickSickerModel_psa_params$
    psa_params_dists_args,
  n_sim_ = 1e4
)

PSA_plots <- plot_psa(
  psa_results_ = PSA_results,
  interventions_ = c("Status quo", "Treatment"),
  reference_ = 2,
  maximum_threshold_ = 1e5,
  effects_prefix_ = "QALYs_",
  costs_prefix_ = "Cost_"
)
}
}
